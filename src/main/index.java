/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;


/**
 *
 * @author brixd
 */
public class index extends javax.swing.JFrame {

ImageIcon logo = new ImageIcon(getClass().getResource("/img/logo.png"));

    PreparedStatement pst,pst1,pst2 = null;
    ResultSet rs,rsx,rsy = null;
    static final String USERNAME = "root";
    static final String PASSWORD = "";
    static final String DATACONN = "jdbc:mysql://localhost/setlibrary";
    com.mysql.jdbc.Connection SQLCONN = null;
    
    public index() {
        initComponents();
        SQLCONN = (com.mysql.jdbc.Connection) con();
        updateMode();
        setResizable(false);
        setTitle("YNG Library Access Point");
        setIconImage(logo.getImage()); 
        addKeyListener(new ModeKeyListener());
    }
    
    public final Connection con(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            SQLCONN = (com.mysql.jdbc.Connection) DriverManager.getConnection(DATACONN,USERNAME,PASSWORD);
        }catch(SQLException | ClassNotFoundException e){
            JOptionPane.showMessageDialog(null,e);
        }
        return SQLCONN;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        base = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        des = new javax.swing.JPanel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        logBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(300, 300));
        setSize(new java.awt.Dimension(300, 300));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        base.setMinimumSize(new java.awt.Dimension(300, 300));
        base.setPreferredSize(new java.awt.Dimension(300, 300));
        base.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                baseMouseClicked(evt);
            }
        });
        base.setLayout(null);

        title.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Library System Access  Point");
        base.add(title);
        title.setBounds(20, 0, 250, 70);

        des.setBackground(new java.awt.Color(200, 200, 200));
        des.setLayout(null);
        base.add(des);
        des.setBounds(0, 0, 300, 70);

        username.setText("Username");
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        base.add(username);
        username.setBounds(20, 100, 250, 22);

        password.setText("Password");
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFocusLost(evt);
            }
        });
        base.add(password);
        password.setBounds(20, 150, 250, 22);

        logBtn.setText("Log In");
        logBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logBtnActionPerformed(evt);
            }
        });
        base.add(logBtn);
        logBtn.setBounds(20, 210, 250, 23);
        base.add(jSeparator1);
        jSeparator1.setBounds(20, 260, 250, 3);

        jLabel2.setText("Password");
        base.add(jLabel2);
        jLabel2.setBounds(20, 130, 250, 20);

        jLabel3.setText("Username");
        base.add(jLabel3);
        jLabel3.setBounds(20, 80, 250, 20);

        getContentPane().add(base, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logBtnActionPerformed
        String un = username.getText();
        String pw = password.getText();
        try{
             pst =SQLCONN.prepareStatement("select * from librarian where username = ? && password = ?");
             pst.setString(1,un);
             pst.setString(2,pw);
             
             
            rs = pst.executeQuery();
            if(rs.next()){
                   JOptionPane.showMessageDialog(null, "Welcome Librarian "+rs.getString("libFName"), "Response", JOptionPane.INFORMATION_MESSAGE);
                   dispose();
                   home go = new home();
                   go.librarian = rs.getString("libId");
                   go.bookLib.setText(rs.getString("libFName")+" "+rs.getString("libLName"));
                   go.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Librarian not found.","Response",JOptionPane.INFORMATION_MESSAGE);
            }
        }
            catch(SQLException e){
                
            }
    }//GEN-LAST:event_logBtnActionPerformed

    private void baseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_baseMouseClicked
        super.requestFocus();
    }//GEN-LAST:event_baseMouseClicked

    private void usernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusGained
        if(username.getText().equals("Username")){
            username.setText(null);
        }
    }//GEN-LAST:event_usernameFocusGained

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusGained
        if(password.getText().equals("Password")){
            password.setText(null);
        }
    }//GEN-LAST:event_passwordFocusGained

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusLost
        if(username.getText().isBlank()){
            username.setText("Username");
        }
    }//GEN-LAST:event_usernameFocusLost

    private void passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusLost
        if(password.getText().isBlank()){
            password.setText("Password");
        }
    }//GEN-LAST:event_passwordFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(JOptionPane.showConfirmDialog(null,"Are you sure to exit?","Exit",JOptionPane.YES_OPTION)==JOptionPane.YES_OPTION){
           System.exit(0);
        }   
    }//GEN-LAST:event_formWindowClosing
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new index().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel base;
    private javax.swing.JPanel des;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton logBtn;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel title;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

class ModeKeyListener implements KeyListener {
        @Override
        public void keyTyped(KeyEvent e) {
        }
        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                isDarkMode=!isDarkMode;
                updateMode();
            }
        }
        @Override
        public void keyReleased(KeyEvent e) {
        }
    }    
    
//for light and dark mode
    private boolean isDarkMode = false;
    
     private void updateMode() {
        if (isDarkMode) {
            FlatDarkLaf.install();
            title.setForeground(Color.white);
            des.setBackground(new Color(60,63,65));
        } else {
            FlatLightLaf.install();
            title.setForeground(new Color (20,20,20));
            des.setBackground(new Color(242,242,242));
        }
        SwingUtilities.updateComponentTreeUI(this);
    }

}
